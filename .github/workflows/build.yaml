---
name: Gspcoin Build
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - develop
env:
  COIN_NAME: gspcoin
  BUILD_DIR: gspcoin-build
  COMPRESS_DIR: gspcoin-compress
  TEST_LOG_ARTIFACT_DIR: test-logs
jobs:
  checking-build-version:
    name: Checking Build Versioning
    runs-on: ubuntu-20.04
    steps:
      - name: Trigger by
        run: |
          echo "checking out $GITHUB_REF trigger by $GITHUB_EVENT_NAME"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Read build.properties key for master
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master'}}
        id: release-version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: build.properties
          property: 'release-version'
      - name: Read build.properties key for develop
        if: ${{ github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'}}
        id: snapshot-version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: build.properties
          property: 'snapshot-version'
      - name: create version
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master'}}
        run: |
          echo "BUILD_VERSION=${{ steps.release-version.outputs.value }}" > version.txt
      - name: create snapshot version
        if: ${{ github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'}}
        run: |
          echo "BUILD_VERSION=${{ steps.snapshot-version.outputs.value }}" > version.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: version
          path: version.txt

  build-ubuntu20:
    name: Ubuntu 20.04 build
    needs: checking-build-version
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Getting Version
        uses: actions/download-artifact@v3
        with:
          name: version
      - name: Extract version
        run: |
          cat version/version.txt >> $GITHUB_ENV
      - name: Install Required Packages
        run: |
          sudo apt-get update -y
          sudo apt-get upgrade -y
          sudo apt-get install -y curl build-essential libtool autotools-dev automake pkg-config python3 bsdmainutils cmake
      - name: build depends
        run: |
          echo "building with $(nproc) threads"
          make -C depends -j$(nproc)
      - name: configure
        run: |
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/x86_64-pc-linux-gnu
      - name: build binary
        run: |
          make -j$(nproc)
          mkdir -p $BUILD_DIR
          mv src/{gspcoin-cli,gspcoin-tx,gspcoind,qt/gspcoin-qt} $BUILD_DIR/
          strip $BUILD_DIR/*
      - name: generate checksum and compress
        run: |
          echo "buildng $BUILD_VERSION version"
          cd $BUILD_DIR
          shasum gspcoin-cli >> checksums.txt
          sha256sum gspcoin-cli >> checksums.txt
          shasum gspcoind >> checksums.txt
          sha256sum gspcoind >> checksums.txt
          shasum gspcoin-tx >> checksums.txt
          sha256sum gspcoin-tx >> checksums.txt
          shasum gspcoin-qt >> checksums.txt
          sha256sum gspcoin-qt >> checksums.txt
          cat checksums.txt
          cd ..
          tar -cvzf ${COIN_NAME}-ubuntu20-${BUILD_VERSION}.tar.gz $BUILD_DIR/*
          mkdir -p ${COMPRESS_DIR}
          mv ${COIN_NAME}-ubuntu20-${BUILD_VERSION}.tar.gz ${COMPRESS_DIR}/
          shasum ${COMPRESS_DIR}/${COIN_NAME}-ubuntu20-${BUILD_VERSION}.tar.gz >> ${COMPRESS_DIR}/checksums.txt
          sha256sum ${COMPRESS_DIR}/${COIN_NAME}-ubuntu20-${BUILD_VERSION}.tar.gz >> ${COMPRESS_DIR}/checksums.txt
          cat ${COMPRESS_DIR}/checksums.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.COIN_NAME }}-ubuntu20-${{ env.BUILD_VERSION }}
          path: ${{ env.COMPRESS_DIR }}

  build-ubuntu22:
    name: Ubuntu 22.04 build
    needs: checking-build-version
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Getting Version
        uses: actions/download-artifact@v3
        with:
          name: version
      - name: Extract version
        run: |
          cat version/version.txt >> $GITHUB_ENV
      - name: Install Required Packages
        run: |
          sudo apt-get update -y
          sudo apt-get upgrade -y
          sudo apt-get install -y curl build-essential libtool autotools-dev automake pkg-config python3 bsdmainutils cmake
      - name: build depends
        run: |
          echo "building with $(nproc) threads"
          make -C depends -j$(nproc)
      - name: configure
        run: |
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/x86_64-pc-linux-gnu
      - name: build binary
        run: |
          make -j$(nproc)
          mkdir -p $BUILD_DIR
          mv src/{gspcoin-cli,gspcoin-tx,gspcoind,qt/gspcoin-qt} $BUILD_DIR/
          strip $BUILD_DIR/*
      - name: generate checksum and compress
        run: |
          echo "buildng $BUILD_VERSION version"
          cd $BUILD_DIR
          shasum gspcoin-cli >> checksums.txt
          sha256sum gspcoin-cli >> checksums.txt
          shasum gspcoind >> checksums.txt
          sha256sum gspcoind >> checksums.txt
          shasum gspcoin-tx >> checksums.txt
          sha256sum gspcoin-tx >> checksums.txt
          shasum gspcoin-qt >> checksums.txt
          sha256sum gspcoin-qt >> checksums.txt
          cat checksums.txt
          cd ..
          tar -cvzf ${COIN_NAME}-ubuntu22-${BUILD_VERSION}.tar.gz $BUILD_DIR/*
          mkdir -p ${COMPRESS_DIR}
          mv ${COIN_NAME}-ubuntu22-${BUILD_VERSION}.tar.gz ${COMPRESS_DIR}/
          shasum ${COMPRESS_DIR}/${COIN_NAME}-ubuntu22-${BUILD_VERSION}.tar.gz >> ${COMPRESS_DIR}/checksums.txt
          sha256sum ${COMPRESS_DIR}/${COIN_NAME}-ubuntu22-${BUILD_VERSION}.tar.gz >> ${COMPRESS_DIR}/checksums.txt
          cat ${COMPRESS_DIR}/checksums.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.COIN_NAME }}-ubuntu22-${{ env.BUILD_VERSION }}
          path: ${{ env.COMPRESS_DIR }}

  build-ubuntu24:
    name: Ubuntu 24.04 build
    needs: checking-build-version
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Getting Version
        uses: actions/download-artifact@v3
        with:
          name: version
      - name: Extract version
        run: |
          cat version/version.txt >> $GITHUB_ENV
      - name: Install Required Packages
        run: |
          sudo apt-get update -y
          sudo apt-get upgrade -y
          sudo apt-get install -y curl build-essential libtool autotools-dev automake pkg-config python3 bsdmainutils cmake
      - name: build depends
        run: |
          echo "building with $(nproc) threads"
          make -C depends -j$(nproc)
      - name: configure
        run: |
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/x86_64-pc-linux-gnu
      - name: build binary
        run: |
          make -j$(nproc)
          mkdir -p $BUILD_DIR
          mv src/{gspcoin-cli,gspcoin-tx,gspcoind,qt/gspcoin-qt} $BUILD_DIR/
          strip $BUILD_DIR/*
      - name: generate checksum and compress
        run: |
          echo "buildng $BUILD_VERSION version"
          cd $BUILD_DIR
          shasum gspcoin-cli >> checksums.txt
          sha256sum gspcoin-cli >> checksums.txt
          shasum gspcoind >> checksums.txt
          sha256sum gspcoind >> checksums.txt
          shasum gspcoin-tx >> checksums.txt
          sha256sum gspcoin-tx >> checksums.txt
          shasum gspcoin-qt >> checksums.txt
          sha256sum gspcoin-qt >> checksums.txt
          cat checksums.txt
          cd ..
          tar -cvzf ${COIN_NAME}-ubuntu24-${BUILD_VERSION}.tar.gz $BUILD_DIR/*
          mkdir -p ${COMPRESS_DIR}
          mv ${COIN_NAME}-ubuntu24-${BUILD_VERSION}.tar.gz ${COMPRESS_DIR}/
          shasum ${COMPRESS_DIR}/${COIN_NAME}-ubuntu24-${BUILD_VERSION}.tar.gz >> ${COMPRESS_DIR}/checksums.txt
          sha256sum ${COMPRESS_DIR}/${COIN_NAME}-ubuntu24-${BUILD_VERSION}.tar.gz >> ${COMPRESS_DIR}/checksums.txt
          cat ${COMPRESS_DIR}/checksums.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.COIN_NAME }}-ubuntu24-${{ env.BUILD_VERSION }}
          path: ${{ env.COMPRESS_DIR }}

  build-linux-arm:
    name: Linux ARM build
    needs: checking-build-version
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Getting Version
        uses: actions/download-artifact@v3
        with:
          name: version
      - name: Extract version
        run: |
          cat version/version.txt >> $GITHUB_ENV
      - name: Install Required Packages
        run: |
          sudo apt-get update -y
          sudo apt-get upgrade -y
          sudo apt-get install -y curl build-essential libtool autotools-dev automake pkg-config python3 bsdmainutils cmake
          sudo apt-get install -y g++-aarch64-linux-gnu
      - name: build depends
        run: |
          echo "building with $(nproc) threads"
          make -C depends -j$(nproc) HOST=aarch64-linux-gnu
      - name: configure
        run: |
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/aarch64-linux-gnu
      - name: build binary
        run: |
          make -j$(nproc)
          mkdir -p $BUILD_DIR
          mv src/{gspcoin-cli,gspcoin-tx,gspcoind,qt/gspcoin-qt} $BUILD_DIR/
          strip $BUILD_DIR/*
      - name: generate checksum and compress
        run: |
          echo "buildng $BUILD_VERSION version"
          cd $BUILD_DIR
          shasum gspcoin-cli >> checksums.txt
          sha256sum gspcoin-cli >> checksums.txt
          shasum gspcoind >> checksums.txt
          sha256sum gspcoind >> checksums.txt
          shasum gspcoin-tx >> checksums.txt
          sha256sum gspcoin-tx >> checksums.txt
          shasum gspcoin-qt >> checksums.txt
          sha256sum gspcoin-qt >> checksums.txt
          cat checksums.txt
          cd ..
          tar -cvzf ${COIN_NAME}-linux-arm-${BUILD_VERSION}.tar.gz $BUILD_DIR/*
          mkdir -p ${COMPRESS_DIR}
          mv ${COIN_NAME}-linux-arm-${BUILD_VERSION}.tar.gz ${COMPRESS_DIR}/
          shasum ${COMPRESS_DIR}/${COIN_NAME}-linux-arm-${BUILD_VERSION}.tar.gz >> ${COMPRESS_DIR}/checksums.txt
          sha256sum ${COMPRESS_DIR}/${COIN_NAME}-linux-arm-${BUILD_VERSION}.tar.gz >> ${COMPRESS_DIR}/checksums.txt
          cat ${COMPRESS_DIR}/checksums.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.COIN_NAME }}-linux-arm-${{ env.BUILD_VERSION }}
          path: ${{ env.COMPRESS_DIR }}

  build-macos:
    name: macos build
    needs: checking-build-version
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Getting Version
        uses: actions/download-artifact@v3
        with:
          name: version
      - name: Extract version
        run: |
          cat version/version.txt >> $GITHUB_ENV
      - name: Install Required Packages
        run: |
          brew install automake libtool pkg-config miniupnpc librsvg libnatpmp zeromq python
          pip3 install ds_store mac_alias
      - name: build depends
        run: |
          echo "building with $(nproc) threads"
          make -C depends -j$(nproc)
      - name: configure
        run: |
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/x86_64-apple-darwin19.6.0
      - name: build binary
        run: |
          make -j$(nproc)
          mkdir -p $BUILD_DIR
          mv src/{gspcoin-cli,gspcoin-tx,gspcoind,qt/gspcoin-qt} $BUILD_DIR/
          strip $BUILD_DIR/*
      - name: generate checksum and compress
        run: |
          echo "buildng $BUILD_VERSION version"
          cd $BUILD_DIR
          shasum gspcoin-cli >> checksums.txt
          openssl sha256 gspcoin-cli >> checksums.txt
          shasum gspcoind >> checksums.txt
          openssl sha256 gspcoind >> checksums.txt
          shasum gspcoin-tx >> checksums.txt
          openssl sha256 gspcoin-tx >> checksums.txt
          openssl sha256 gspcoin-qt >> checksums.txt
          openssl sha256 gspcoin-qt >> checksums.txt
          cat checksums.txt
          cd ..
          tar -cvzf ${COIN_NAME}-macos-${BUILD_VERSION}.tar.gz $BUILD_DIR/*
          mkdir -p ${COMPRESS_DIR}
          mv ${COIN_NAME}-macos-${BUILD_VERSION}.tar.gz ${COMPRESS_DIR}/
          shasum ${COMPRESS_DIR}/${COIN_NAME}-macos-${BUILD_VERSION}.tar.gz >> ${COMPRESS_DIR}/checksums.txt
          openssl sha256 ${COMPRESS_DIR}/${COIN_NAME}-macos-${BUILD_VERSION}.tar.gz >> ${COMPRESS_DIR}/checksums.txt
          cat ${COMPRESS_DIR}/checksums.txt
      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.COIN_NAME }}-macos-${{ env.BUILD_VERSION }}
          path: ${{ env.COMPRESS_DIR }}
      - name: Generate Macos dmg files
        run: |
          make deploy
      - name: Upload dmg file
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.COIN_NAME }}-dmg-${{ env.BUILD_VERSION }}
          path: Gspcoin-Qt.dmg

  build-win:
    name: window build
    needs: checking-build-version
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Getting Version
        uses: actions/download-artifact@v3
        with:
          name: version
      - name: Extract version
        run: |
          cat version/version.txt >> $GITHUB_ENV
      - name: Install Required Packages
        run: |
          choco install -y mingw
      - name: build depends
        run: |
          echo "building with $(nproc) threads"
          make -C depends -j$(nproc) HOST=x86_64-w64-mingw32
      - name: configure
        run: |
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32
      - name: build binary
        run: |
          make -j$(nproc)
          mkdir -p $BUILD_DIR
          mv src/{gspcoin-cli.exe,gspcoin-tx.exe,gspcoind.exe,qt/gspcoin-qt.exe} $BUILD_DIR/
          strip $BUILD_DIR/*
      - name: generate checksum and compress
        run: |
          echo "buildng $BUILD_VERSION version"
          cd $BUILD_DIR
          shasum gspcoin-cli.exe >> checksums.txt
          sha256sum gspcoin-cli.exe >> checksums.txt
          shasum gspcoind.exe >> checksums.txt
          sha256sum gspcoind.exe >> checksums.txt
          shasum gspcoin-tx.exe >> checksums.txt
          sha256sum gspcoin-tx.exe >> checksums.txt
          shasum gspcoin-qt.exe >> checksums.txt
          sha256sum gspcoin-qt.exe >> checksums.txt
          cd ..
          zip -r ${COIN_NAME}-win-${BUILD_VERSION}.zip $BUILD_DIR/
          mkdir -p ${COMPRESS_DIR}
          mv ${COIN_NAME}-win-${BUILD_VERSION}.zip ${COMPRESS_DIR}/
          shasum ${COMPRESS_DIR}/${COIN_NAME}-win-${BUILD_VERSION}.zip >> ${COMPRESS_DIR
